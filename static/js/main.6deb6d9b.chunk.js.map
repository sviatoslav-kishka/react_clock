{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","this","timer","setInterval","setState","console","log","prevProps","prevState","name","props","oldName","newName","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAGjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAXP,gCAcE,SAAmBS,EAAWC,GAC5B,GAAID,EAAUE,OAASR,KAAKS,MAAMD,KAAM,CACtC,IAAME,EAAUJ,EAAUE,KACpBG,EAAUX,KAAKS,MAAMD,KAE3BJ,QAAQC,IAAR,qCAA0CK,EAA1C,eAAwDC,OAnB9D,kCAuBE,WACEC,cAAcZ,KAAKC,SAxBvB,oBA2BE,WACE,MAAM,GAAN,OACKD,KAAKJ,MAAMC,UA7BpB,GAA2BgB,IAAMC,WCGpBC,G,MAAb,4MACEnB,MAAQ,CACNoB,gBAAgB,EAChBC,UAAW,aAHf,4CAME,WAAU,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,2CACA,2CAEG,IACAlB,KAAKJ,MAAMoB,gBAAmB,kBAAC,EAAD,CAAOR,KAAMR,KAAKJ,MAAMqB,aAEzD,4BACEE,KAAK,SACLC,QAAS,WACP,EAAKjB,SAAS,CAAEa,gBAAgB,MAHpC,cAQA,4BACEG,KAAK,SACLC,QAAS,WACP,EAAKjB,SAAS,CAAEa,gBAAgB,MAHpC,cAQA,4BACEG,KAAK,SACLC,QAAS,WACP,EAAKjB,SAAS,CACZc,UAAU,SAAD,OAAWI,KAAKC,MAAM,IAAAD,KAAKE,SAAwB,QAJlE,wBA/BR,GAAyBV,IAAMC,YCF/BU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6deb6d9b.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.name !== this.props.name) {\n      const oldName = prevProps.name;\n      const newName = this.props.name;\n\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      `${this.state.date}`\n    );\n  }\n}\n\nClock.propTypes = {\n  name: propTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { Clock } from './components/Clock';\nimport './App.scss';\n// import { render } from 'node-sass';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'firstname',\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && (<Clock name={this.state.clockName} />)}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              clockName: `Clock#${Math.floor(Math.random() * (1000 - 1) + 1)}`,\n            });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}